{
  "version": "ManimCE-0.19.0",
  "reference_urls": {
    "scene": "https://docs.manim.community/en/stable/reference/manim.scene.scene.Scene.html",
    "mobject": "https://docs.manim.community/en/stable/reference/manim.mobject.mobject.Mobject.html",
    "vmobject": "https://docs.manim.community/en/stable/reference/manim.mobject.types.vectorized_mobject.VMobject.html",
    "animation": "https://docs.manim.community/en/stable/reference/manim.animation.animation.Animation.html",
    "text": "https://docs.manim.community/en/stable/reference/manim.mobject.text.text_mobject.Text.html",
    "mathtex": "https://docs.manim.community/en/stable/reference/manim.mobject.text.tex_mobject.MathTex.html",
    "value_tracker": "https://docs.manim.community/en/stable/reference/manim.mobject.value_tracker.ValueTracker.html"
  },
  "classes": {
    "Scene": {
      "name": "Scene",
      "module": "manim.scene.scene.Scene",
      "constructor": "Scene(renderer=None, camera_class=Camera, always_update_mobjects=False, random_seed=None, skip_animations=False)",
      "properties": ["camera", "time", "mobjects"],
      "notes": [
        "When clearing or fading out all current objects, wrap self.mobjects in Group(*self.mobjects) instead of VGroup; self.mobjects can contain non-VMobject instances and VGroup would raise a TypeError."
      ],
      "methods": {
        "render": "render(preview=False)",
        "setup": "setup()",
        "construct": "construct()",
        "tear_down": "tear_down()",
        "add": "add(*mobjects)",
        "remove": "remove(*mobjects)",
        "clear": "clear()",
        "bring_to_front": "bring_to_front(*mobjects)",
        "bring_to_back": "bring_to_back(*mobjects)",
        "add_to_foreground": "add_to_foreground(m)",
        "add_foreground_mobjects": "add_foreground_mobjects(*mobjects)",
        "remove_foreground_mobject": "remove_foreground_mobject(m)",
        "remove_foreground_mobjects": "remove_foreground_mobjects(*mobjects)",
        "play": "play(*animations)",
        "wait": "wait(duration=1)",
        "add_sound": "add_sound(sound_file, time_offset=0)",
        "pause": "pause()",
        "next_section": "next_section()"
      }
    },
    "Mobject": {
      "name": "Mobject",
      "module": "manim.mobject.mobject.Mobject",
      "constructor": "Mobject(color=WHITE, fill_opacity=1.0, stroke_width=0, z_index=0, name=\"\")",
      "attrs": ["submobjects", "points", "dim", "z_index", "name"],
      "properties": ["width", "height", "depth"],
      "methods": {
        "add": "add(*mobjects)",
        "add_to_back": "add_to_back(*mobjects)",
        "add_updater": "add_updater(update_function)",
        "remove_updater": "remove_updater(update_function)",
        "clear_updaters": "clear_updaters()",
        "copy": "copy()",
        "set_color": "set_color(color, family=True)",
        "set_fill": "set_fill(color=None, opacity=None, family=True)",
        "set_stroke": "set_stroke(color=None, width=None, opacity=None, family=True)",
        "rotate": "rotate(angle, axis=OUT, about_point=None)",
        "flip": "flip(axis=RIGHT)",
        "move_to": "move_to(point)",
        "shift": "shift(vector)",
        "next_to": "next_to(mobject_or_point, direction, buff=0)",
        "to_edge": "to_edge(direction, buff=0)",
        "to_corner": "to_corner(direction, buff=0)",
        "scale": "scale(scale_factor, about_point=None)",
        "stretch_to_fit_width": "stretch_to_fit_width(width)",
        "stretch_to_fit_height": "stretch_to_fit_height(height)",
        "match_width": "match_width(mobject)",
        "match_height": "match_height(mobject)",
        "center": "center()",
        "get_center": "get_center()",
        "get_left": "get_left()",
        "get_right": "get_right()",
        "get_top": "get_top()",
        "get_bottom": "get_bottom()"
      }
    },
    "VMobject": {
      "name": "VMobject",
      "module": "manim.mobject.types.vectorized_mobject.VMobject",
      "methods": {
        "start_new_path": "start_new_path(point)",
        "add_line_to": "add_line_to(point)",
        "add_cubic_bezier_curve_to": "add_cubic_bezier_curve_to(control1, control2, anchor)",
        "append_points": "append_points(points_array)",
        "become_partial": "become_partial(vmobject, a, b)",
        "get_arc_length": "get_arc_length()",
        "get_nth_curve_points": "get_nth_curve_points(n)",
        "get_num_curves": "get_num_curves()",
        "insert_n_curves": "insert_n_curves(n)",
        "point_from_proportion": "point_from_proportion(alpha)",
        "set_points_as_corners": "set_points_as_corners(points)",
        "set_points_smoothly": "set_points_smoothly(points)",
        "set_fill": "set_fill(color=None, opacity=None, family=True)",
        "set_stroke": "set_stroke(color=None, width=None, opacity=None, family=True)",
        "set_sheen": "set_sheen(factor, direction=None, family=True)",
        "set_sheen_direction": "set_sheen_direction(direction, family=True)"
      }
    },
    "Animation": {
      "name": "Animation",
      "module": "manim.animation.animation.Animation",
      "constructor": "Animation(mobject=None, **kwargs)"
    },
    "Text": {
      "name": "Text",
      "module": "manim.mobject.text.text_mobject.Text",
      "constructor": "Text(text, font_size=48, color=WHITE, stroke_width=0, stroke_opacity=1.0, fill_opacity=1.0, gradient=None)"
    },
    "MathTex": {
      "name": "MathTex",
      "module": "manim.mobject.text.tex_mobject.MathTex",
      "constructor": "MathTex(*tex_strings, arg_separator=' ', substrings_to_isolate=None, tex_to_color_map=None, tex_environment='align*', font_size=48, color=WHITE)"
    },
    "ValueTracker": {
      "name": "ValueTracker",
      "module": "manim.mobject.value_tracker.ValueTracker",
      "constructor": "ValueTracker(value=0)",
      "methods": {
        "get_value": "get_value()",
        "set_value": "set_value(val)",
        "increment_value": "increment_value(delta)"
      }
    },
    "DoubleValueTracker": {
      "name": "DoubleValueTracker",
      "module": "manim.mobject.value_tracker.DoubleValueTracker",
      "constructor": "DoubleValueTracker(x0, y0)",
      "methods": {
        "get_values": "get_values()", 
        "set_values": "set_values(x, y)"
      }
    },
    "ComplexValueTracker": {
      "name": "ComplexValueTracker",
      "module": "manim.mobject.value_tracker.ComplexValueTracker",
      "constructor": "ComplexValueTracker(value=0)",
      "methods": {
        "get_value": "get_value()", 
        "set_value": "set_value(z)"
      }
    }
  },
  "common_animations": {
    "Create": "manim.animation.creation.Create",
    "Write": "manim.animation.creation.Write",
    "FadeIn": "manim.animation.fading.FadeIn",
    "FadeOut": "manim.animation.fading.FadeOut",
    "FadeTransform": "manim.animation.fading.FadeTransform",
    "Transform": "manim.animation.transform.Transform",
    "ReplacementTransform": "manim.animation.transform.ReplacementTransform",
    "Rotate": "manim.animation.rotation.Rotate",
    "MoveAlongPath": "manim.animation.movement.MoveAlongPath",
    "AnimationGroup": "manim.animation.composition.AnimationGroup",
    "Succession": "manim.animation.composition.Succession",
    "LaggedStart": "manim.animation.composition.LaggedStart",
    "Wait": "manim.animation.animation.Wait"
  },
  "constants": {
    "ORIGIN": "[0, 0, 0]",
    "UP": "[0, 1, 0]",
    "DOWN": "[0, -1, 0]",
    "RIGHT": "[1, 0, 0]",
    "LEFT": "[-1, 0, 0]",
    "IN": "[0, 0, -1]",
    "OUT": "[0, 0, 1]",
    "UL": "UP+LEFT",
    "UR": "UP+RIGHT",
    "DL": "DOWN+LEFT",
    "DR": "DOWN+RIGHT",
    "PI": "pi",
    "TAU": "2*pi",
    "DEGREES": "pi/180",
    "ORIGIN_NAME": "The center of the coordinate system:contentReference[oaicite:43]{index=43}",
    "AXES": {
      "UP": "One unit up (positive Y):contentReference[oaicite:44]{index=44}",
      "DOWN": "One unit down (negative Y):contentReference[oaicite:45]{index=45}",
      "RIGHT": "One unit right (positive X):contentReference[oaicite:46]{index=46}",
      "LEFT": "One unit left (negative X):contentReference[oaicite:47]{index=47}",
      "IN": "One unit into screen (negative Z):contentReference[oaicite:48]{index=48}",
      "OUT": "One unit out of screen (positive Z):contentReference[oaicite:49]{index=49}"
    }
  }
}
